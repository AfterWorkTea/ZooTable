<html lang="en">
<link rel="stylesheet" type="text/css" href="css/zoo.css">
 <head>
  <title>Zoo Demo App</title>
  <meta charset="UTF-8" /
 </head>
 <body>

  <?php
    include "include/header.php";
  ?>

  <h3>The purpose</h3>

  <p>Introduce ZooTable PHP engine that renders HTML tables using XML-centric approach for PHP/SQL web application.</p>

  <h3>Characteristics</h3>

  <p>Uses <strong>PDO</strong> (PHP Data Objects) to pull data from <strong>MySQL</strong> stored functions<p>
  <ul>
     <li>MySQL stored functions builds a DAO Interface</li>
     <li>Data processing like sorting, filtering, etc. takes place in MySQL</li>
     <li>Easy DB configuration with references to names of stored functions</li>
  </ul>
  
  <p>Universal <strong>XML-centric</strong> approach</p>
  <ul>
    <li>XML configuration defines access to MySQL stored functions</li>
    <li>MySQL stored functions returns XML</li>
    <li>XSLT transforms XML into HTML</li>
  </ul>

  <p><strong>Flexible</strong> and <strong>easy</strong> to modify</p>
  <ul>
  <li>The ZooTable is independent from a DB data model as long as stored functions follows rules.</li>
  <li>The same ZooTable can format different tables as changes are made to XML/XSLT/CSS.</li>
  </ul>

  <h3>What you will get?</h3>

  <p>A working set of examples that demonstrate step by step both DB and client-side (PHP) techniques.</p> 
  <p>It concludes with a demonstration of the ZooTable class:</p>
  <ul>
  <li><a href="example1.php">Example 1</a> - PHP DB query using PDO.</li>
  <li><a href="example2.php">Example 2</a> - stored function returning XML.</li>
  <li><a href="example3.php">Example 3</a> - transforming an XML into a table.</li>
  <li><a href="example4.php">Example 4</a> - sorting columns in table generated from XML.</li>
  <li><a href="example5.php">Example 5</a> - filtering rows in table.</li>
  <li><a href="example6.php">Example 6</a> - table with sorting, filtering and paging generated by ZooTable.</li>
  <li><a href="example7.php">Example 7</a> - adding images and links to table generated by ZooTable.</li>
  </ul>

  <h3>The reasons</h3>

  <p>Consider the following:</p>
  <ul>
  <li>Stored routines are powerful and flexible in processing data - they are close to the DB engine.</li>
  <li>A set of stored routines would naturally constitute a DAO interface.</li>
  <li>A stored function can return only one value but using XML overcomes the limit.</li>
  <li>An XML response can be processed by variety of clients, e.g. transformed into GUI elements.</li>
  <li>The technique is universal - it might be used in many places or even found a framework.</li>
  <li>Paging mechanism helps to limit XML to workable size.</li>
  </ul>


  <h3>Before you will start</h3>

  <p>A knowlage of relational databases, stored procedures, XML, XLST and PHP is required.</p>
  <p>Check the system <a href="spec.php">specification</a>  and the <a href="disclaimer.php">disclaimer<a> before using the examples.</p>

  <br/>
   <p>Thank you for checking the ZooTable!</p>

  
  <?php
    include "include/footer.php";
  ?>

  </div>

 </body>
</html>
